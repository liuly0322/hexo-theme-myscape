<aside id="sidebar">
  <% theme.widgets.forEach(function(widget){ %>
    <%- partial('_widget/' + widget) %>
  <% }) %>
  <% if (is_home() && theme.valine.enable && theme.valine.recentNum) { %>
    <div class="widget-wrap">
      <h3 class="widget-title">最新评论</h3>
      <div class="widget" id="recent-comment" style="padding: 0 20px 15px 15px;"></div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/md5@2.3.0/dist/md5.min.js"></script>
    <script>
      const timeAgo = (date) => {
        let t = new Date().getTime() - date.getTime();
        const f = n => Math.floor(n);
        if (t > 691200000) {
          const pad = n => n.toString().length < 2 ? '0' + n : n;
          return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;
        }
        if (t >= 86400000) return `${f(t / 86400000)}天前`;
        if (t >= 3600000) return `${f(t / 3600000)}小时前`;
        if (t >= 60000) return `${f(t / 60000)}分钟前`;
        if (t >= 0) return `${f(t / 1000)}秒前`;
        return '刚刚';
      }
      const getRecentComment = setInterval(() => {
        if (typeof (AV) != 'undefined' && AV.applicationId) {
          clearInterval(getRecentComment);
          const query = new AV.Query('Comment');
          query.descending('createdAt');
          const regExp = new RegExp('^((?!microblog).)*$');
          query.matches('url', regExp);
          let n = Number.parseInt('<%= theme.valine.recentNum %>');
          query.limit(n);
          let s = new Array(), count = 0;
          query.find().then((comments) => {
            n = comments.length;
            comments.forEach((comment, i) => {
              const url = comment.get('url');
              const src = `https://gravatar.loli.net/avatar/${MD5(comment.get('mail'))}?d=robohash`
              fetch(url).then(res => res.text()).then(text => {
                const index = text.indexOf('og:title');
                let t = text.slice(index + 19);
                t = t.slice(0, t.indexOf('\"'));
                s[i] = `<div class="vcard"><img class="vimg" src="${src}"><div class="vh"><span>${comment.get('nick')}</span> ： <a href="${url}" class="comment-from">「${t}」</a><div class="vtime">${timeAgo(comment.get('insertedAt'))}</div><div class="comment-text">${comment.get('comment')}</div></div></div>`;
                count++;
              })
            });
          });
          const waitToJoin = setInterval(() => {
            if (count == n) {
              clearInterval(waitToJoin);
              document.querySelector('#recent-comment').innerHTML = s.join('');
            }
          }, 100);
        }
      }, 100);
    </script>
  <% } %>
</aside>