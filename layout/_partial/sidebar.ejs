<aside id="sidebar"<% if (theme.sidebar === 'bottom'){ %> class="outer"<% } %>>
  <% theme.widgets.forEach(function(widget){ %>
    <%- partial('_widget/' + widget) %>
  <% }) %>
  <% if (is_home() && theme.valine.enable) { %>
    <div class="widget-wrap">
      <h3 class="widget-title">最新评论</h3>
      <div class="widget" id="recent-comment" style="padding: 0 20px 15px 15px;">
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/md5@2.3.0/dist/md5.min.js"></script>
    <script>
      const timeAgo = (date) => {
        var t = new Date().getTime() - date.getTime();
        var d = Math.floor(t / (24 * 3600 * 1000));
        if (d === 0) {
          var h = Math.floor(t / (3600 * 1000));
          if (h === 0) {
            var m = Math.floor(t / (60 * 1000));
            if (m === 0) {
              var s = Math.round(t / 1000);
              return s + '秒前';
            }
            return m + '分钟前';
          }
          return h + '小时前';
        }
        if (d < 0) return '刚刚';
        if (d < 8) return d + '天前';
        const pad = (n) => {
          var s = n.toString();
          while (s.length < 2) s = '0' + s;
          return s;
        }
        return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;
      }
      const getRecentComment = setInterval(() => {
        if (typeof (AV) != 'undefined' && AV.applicationId) {
          clearInterval(getRecentComment);
          const query = new AV.Query('Comment');
          query.descending('createdAt');
          const regExp = new RegExp('^((?!microblog).)*$');
          query.matches('url', regExp);
          const n = Number.parseInt('<%= theme.valine.recentNum %>');
          query.limit(n);
          let s = new Array(), count = 0;
          query.find().then((comments) => {
            comments.forEach((comment, i) => {
              const url = comment.attributes['url'];
              const src = 'https://gravatar.loli.net/avatar/' + MD5(comment.attributes['mail']) + '?d=robohash&v=1.4.14'
              fetch(url).then(res => res.text()).then(text => {
                const index = text.indexOf('og:title');
                let t = text.slice(index + 19);
                t = t.slice(0, t.indexOf('\"'));
                s[i] = `<div class="vcard"><img class="vimg" src="${src}"><div class="vh"><span>${comment.attributes['nick']}</span> ： <a href="${url}" class="comment-from">「${t}」</a><div class="vtime">${timeAgo(comment.attributes['insertedAt'])}</div><div class="comment-text">${comment.attributes['comment']}</div></div></div>`;
                count++;
              })
            })
          });
          const waitToJoin = setInterval(() => {
            if (count == n) {
              clearInterval(waitToJoin);
              document.querySelector('#recent-comment').innerHTML = s.join('');
            }
          }, 100);
        }
      }, 100);
    </script>
  <% } %>
</aside>